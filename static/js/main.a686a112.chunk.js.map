{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","props","todos","map","getUser","userId","usersFromServer","find","todosWithUser","App","useState","setTodos","setTitle","setUserId","errorUserSelect","setErrorUserSelect","errorTitle","setErrorTitle","action","method","onSubmit","e","preventDefault","isValid","newTodo","Math","max","Number","currentTodos","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"qNAAe,GACb,CACEA,GAAI,EACJC,KAAM,gBACNC,SAAU,OACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,eACNC,SAAU,YACVC,MAAO,qBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,sBAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,WACVC,MAAO,6BAET,CACEH,GAAI,EACJC,KAAM,mBACNC,SAAU,SACVC,MAAO,4BAET,CACEH,GAAI,EACJC,KAAM,uBACNC,SAAU,mBACVC,MAAO,2BAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,eACVC,MAAO,0BAET,CACEH,GAAI,EACJC,KAAM,2BACNC,SAAU,gBACVC,MAAO,wBAET,CACEH,GAAI,EACJC,KAAM,kBACNC,SAAU,WACVC,MAAO,2BAET,CACEH,GAAI,GACJC,KAAM,qBACNC,SAAU,iBACVC,MAAO,2B,uBCpDEC,EAAsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5BF,EAAgBE,EAAhBF,MAAOF,EAASI,EAATJ,KAEf,OACE,mBAAGK,UAAU,WAAWC,KAAI,iBAAYJ,GAAxC,SACIF,KCHKO,EAAsB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAElCT,EAIES,EAJFT,GACAU,EAGED,EAHFC,MACAC,EAEEF,EAFFE,UACAN,EACEI,EADFJ,KAGF,OACE,0BACE,UAASL,EACTM,UAAWM,IACT,WACA,CAAE,sBAAuBD,IAJ7B,UAOE,oBAAIL,UAAU,kBAAd,SACII,IAGHL,GACC,cAAC,EAAD,CAAUA,KAAMA,QCtBXQ,EAAsB,SAACC,GAClC,IAAQC,EAAUD,EAAVC,MAER,OACE,yBAAST,UAAU,WAAnB,SACIS,EAAMC,KAAI,SAAAP,GAAI,OAAI,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKT,UCN9C,SAASiB,EAAQC,GACf,OAAOC,EAAgBC,MAAK,SAAAf,GAAI,OAAIA,EAAKL,KAAOkB,MAAW,KAG7D,IAAMG,ECXS,CACb,CACErB,GAAI,EACJU,MAAO,qBACPC,WAAW,EACXO,OAAQ,GAEV,CACElB,GAAI,GACJU,MAAO,qBACPC,WAAW,EACXO,OAAQ,GAEV,CACElB,GAAI,EACJU,MAAO,qCACPC,WAAW,EACXO,OAAQ,IDN0BF,KAAI,SAAAP,GAAI,kCAEvCA,GAFuC,IAG1CJ,KAAMY,EAAQR,EAAKS,aAIVI,EAAM,WACjB,MAA0BC,mBAASF,GAAnC,mBAAON,EAAP,KAAcS,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOb,EAAP,KAAce,EAAd,KACA,EAA4BF,mBAAS,KAArC,mBAAOL,EAAP,KAAeQ,EAAf,KACA,EAA8CH,mBAAS,IAAvD,mBAAOI,EAAP,KAAwBC,EAAxB,KACA,EAAoCL,mBAAS,IAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KAyCA,OACE,sBAAKxB,UAAU,MAAf,UACE,+CAEA,uBACEyB,OAAO,aACPC,OAAO,OACPC,SArCmB,SAACC,GACxBA,EAAEC,iBACF,IAAIC,GAAU,EAcd,GAZe,MAAXlB,IACFU,EAAmB,wBAEnBQ,GAAU,GAGE,KAAV1B,IACFoB,EAAc,wBAEdM,GAAU,GAGRA,EAAS,CACX,IAAMC,EAAU,CACdrC,GA1BGsC,KAAKC,IAAL,MAAAD,KAAI,YAAQvB,EAAMC,KAAI,SAAAP,GAAI,OAAIA,EAAKT,QAAO,EA2B7CU,QACAC,WAAW,EACXO,OAAQsB,OAAOtB,GACfb,KAAMY,EAAQuB,OAAOtB,KAGvBM,GAAS,SAACiB,GAAD,4BAAsBA,GAAtB,CAAoCJ,OA7B/CZ,EAAS,IACTC,EAAU,OAqCR,UAKE,sBAAKpB,UAAU,QAAf,UACE,uBACEoC,KAAK,OACL,UAAQ,aACRC,YAAY,QACZC,MAAOlC,EACPmC,SAAU,SAACX,GACTT,EAASS,EAAEY,OAAOF,OAClBd,EAAc,OAGjBD,GACC,sBAAMvB,UAAU,QAAhB,SAA0BuB,OAI9B,sBAAKvB,UAAU,QAAf,UACE,yBACE,UAAQ,aACRsC,MAAO1B,EACP2B,SAAU,SAACX,GACTR,EAAUQ,EAAEY,OAAOF,OACnBhB,EAAmB,KALvB,UAQE,wBAAQgB,MAAM,IAAIG,UAAQ,EAA1B,2BACC5B,EAAgBH,KAAI,SAAAX,GAAI,OACvB,wBAAsBuC,MAAOvC,EAAKL,GAAlC,SAAuCK,EAAKJ,MAA/BI,EAAKL,UAIrB2B,GACC,sBAAMrB,UAAU,QAAhB,SAA0BqB,OAI9B,wBAAQe,KAAK,SAAS,UAAQ,eAA9B,oBAKF,cAAC,EAAD,CAAU3B,MAAOA,QE/GvBiC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a686a112.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      { name }\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        { title }\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = (props) => {\n  const { todos } = props;\n\n  return (\n    <section className=\"TodoList\">\n      { todos.map(todo => <TodoInfo key={todo.id} todo={todo} />) }\n    </section>\n  );\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList/TodoList';\n\nfunction getUser(userId: number) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst todosWithUser = todosFromServer.map(todo => (\n  {\n    ...todo,\n    user: getUser(todo.userId),\n  }\n));\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUser);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState('0');\n  const [errorUserSelect, setErrorUserSelect] = useState('');\n  const [errorTitle, setErrorTitle] = useState('');\n\n  const getMaxId = () => {\n    return Math.max(...todos.map(todo => todo.id)) + 1;\n  };\n\n  const clear = () => {\n    setTitle('');\n    setUserId('0');\n  };\n\n  const handleFormSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    let isValid = true;\n\n    if (userId === '0') {\n      setErrorUserSelect('Please choose a user');\n\n      isValid = false;\n    }\n\n    if (title === '') {\n      setErrorTitle('Please enter a title');\n\n      isValid = false;\n    }\n\n    if (isValid) {\n      const newTodo = {\n        id: getMaxId(),\n        title,\n        completed: false,\n        userId: Number(userId),\n        user: getUser(Number(userId)),\n      };\n\n      setTodos((currentTodos) => [...currentTodos, newTodo]);\n      clear();\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleFormSubmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Title\"\n            value={title}\n            onChange={(e) => {\n              setTitle(e.target.value);\n              setErrorTitle('');\n            }}\n          />\n          {errorTitle && (\n            <span className=\"error\">{ errorTitle }</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={(e) => {\n              setUserId(e.target.value);\n              setErrorUserSelect('');\n            }}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {errorUserSelect && (\n            <span className=\"error\">{ errorUserSelect }</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}